# network analysis

# using Python to conduct basic network analysis for Takapuna on Auckland's north shore
# includes downloading of network data from from openstreetmap (osm), cleaning and wrangling, then some basic routing

# libraries --------------------------------------------
import osmnx as ox      # network analysis
import geopandas as gdp # general spatial data handling


# download + process osm network -----------------------
# cleaning network data can be onerous, so is great that this function does an excellent job automatically doing it for us :)
# specifying a driving network for argument "network_type" but can specify other transport modes, such as walking or public transit
G = ox.graph_from_place('Auckland, New Zealand', network_type= 'drive')

# download comes in wgs so reproject to nztm (rcs 2193)
G = ox.project_graph(G, to_crs= 'EPSG:2193')

# add columns for speed and travel times along edges
G = ox.add_edge_speeds(G)
G = ox.add_edge_travel_times(G)

# plot graph to see what we downloaded
ox.plot_graph(G, node_size = 0)

# convert graph to geopandas geodata frame
gdf_edges = ox.graph_to_gdfs(G, nodes = False)

# Create lists of edge xy coordinates
x_coord = gdf_edges.head().centroid.map(lambda x: x.coords[0][0])
y_coord = gdf_edges.head().centroid.map(lambda x: x.coords[0][1])

# route through network -------------------------------------
# define origin + destination by finding nearest nodes to supplied coordinates
dest_node = ox.get_nearest_node(G, (5927129.813028354, 1758060.4480746957), method= 'euclidean')
orig_node = ox.get_nearest_node(G, (5922711.2433362715, 1761610.5863462097), method= 'euclidean')

# route from orig_node to dest_node using length
route1 = ox.shortest_path(G, orig_node, dest_node, weight = 'length')

# route from orig_node to dest_node using travel time
route2 = ox.shortest_path(G, orig_node, dest_node, weight = 'travel_time')

# plot the two routes to compare differences in using length vs travel time
fig, ax = ox.plot_graph_routes(G, routes = [route1, route2], 
                               route_colors = ['r', 'y'], 
                               route_linewidth = 6, 
                               node_size = 0)


# all done :)
