# multivariate clustering

# clustering methods focus on k-means and a spatially constrained clustering method. 
# k-means is pure attribute-space and does not consider geographic-space. can add spatial constraints forcing clusters to respect geography and produce geographically contigious clusters.
# value of k is arbitrarily chosen

# could have used k-means instead of agglomerative hierarchical clustering but didn't for reasons of fairness
# k-means is a partitioning method where as spatially constrained clustering is a hierarchical method. thus, we use agglomerative clustering as it is also a hierarchical method
# additionally, the agglomerative hierarchical clustering method is incorporated into our spatially constrained method
# k-means results would be equally as geographically discontigious as the agglomerative method


# libraries
library(sf)        # for general spatial data handling
library(rgeoda)    # for spatially constrained clustering
library(tmap)      # for quick mapping
library(tidyverse) # 

# switch tmap from static to interactive plotting
tmap_mode("view")

# read in sa1 data
data_sa1 <- read_sf("", '')


# read in census data
model_variables <- data_variables %>%
  mutate(across(starts_with("var_"), scale)) # standardise variables where column starts with string "var_"

# create correlogram
# data vis to assess relationship between variables


# agglomerative hierarchical / k-means


# spatially constrained clustering
# generate spatial weight matrix


# apply constrained clustering



# bring results together
results_all <- results_spatial_cluster %>%
  left_join(results_cluster %>%
              select(sa1, cluster),
            by = "sa1")

# map results
# use faceting to create synchorized maps
facets = c("cluster", "spat_cluster") # define which layers to map

tm_shape(results_all) + 
  tm_polygons(facets) +
  tm_facets(nrow = 1,
            sync = TRUE)


world_coffee = left_join(world, coffee_data, by = "name_long")
facets = c("coffee_production_2016", "coffee_production_2017")
tm_shape(world_coffee) + tm_polygons(facets) + 
  tm_facets(nrow = 1, sync = TRUE)

#####
